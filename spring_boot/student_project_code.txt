Inside the package repository:	

@Repository
public interface StudentRepository extends MongoRepository<Student, String>{
	
}
-----------------------------------
Inside the package service:	

@Service
public class StudentService {
	@Autowired
	private StudentRepository studentRepository;

	public String createStudent(StudentDao student) {
		try {
			Student stud = Student.builder().name(student.getName()).semester(student.getSemester())
					.branch(student.getBranch()).build();
			studentRepository.save(student);
		} catch (Exception e) {

		}
		return "Student document added";
	}

	public List<Student> getStudents() {
		List<Student> studentList = new ArrayList<>();
		try {
			studentList = studentRepository.findAll();
		} catch (Exception e) {

		}
		return studentList;
	}

	public String deleteStudent(String id) {
		try {
			studentRepository.deleteById(id);
		} catch (Exception e) {

		}
		return "Student record deleted";
	}

	public String updateStudent(Student student) {
		try {
			Student stud = Student.builder().id(student.getId()).name(student.getName()).semester(student.getSemester())
					.branch(student.getBranch()).build();
			studentRepository.save(stud);
		} catch (Exception e) {

		}
		return "Student record updated";
	}
}
---------------------------------------
Inside the package model:

@Document(value = "students")
@Data
@Builder
public class Student {
	@Id
	private String id;
	@Field(name = "student_name")
	private String name;
	private int semester;
	private String branch;
}
--------------------------------------------
Inside the package controller:

@RestController
@RequestMapping("/api/student")
public class StudentController {

	@Autowired
	private StudentService studentService;

	@PostMapping("/create")
	@ResponseStatus(HttpStatus.CREATED)
	public String createStudent(@RequestBody StudentDao student) {
		return studentService.createStudent(student);		
	}
	
	@GetMapping("/get/students")
	@ResponseStatus(HttpStatus.OK)
	public list<Student> getStudent() {
		return studentService.getStudents();	
	}
	
	@GetMapping("/delete/student")
	@ResponseStatus(HttpStatus.OK)
	public String deleteStudent(@RequestParam String id) {
		return studentService.deleteStudent(id);	
	}
	
	@PutMapping("/update")
	@ResponseStatus(HttpStatus.CREATED)
	public String updateStudent(@RequestBody StudentDao student) {
		return studentService.updateStudent(student);
	}
}
--------------------------------------------
Inside src/main/resources
In the file application.properties
Add the below code: (change name of database)

spring.application.name=student_crud

spring.data.mongodb.uri=mongodb://localhost:27017/nithin_db
--------------------------------------------
